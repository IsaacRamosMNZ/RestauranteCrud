/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIEW;

import DAO.ClienteDAO;
import DTO.ClienteDTO;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class ClienteVIEW extends javax.swing.JFrame {

    private ClienteDAO dao = new ClienteDAO();

    public ClienteVIEW() {
        initComponents();
        setLocationRelativeTo(null);
        atualizarTabela();
    }

    private void atualizarTabela() {
        ArrayList<ClienteDTO> lista = dao.listarTodos();

        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID"); // <--- adiciona ID
        modelo.addColumn("Nome");
        modelo.addColumn("Telefone");
        modelo.addColumn("Email");

        for (ClienteDTO c : lista) {
            modelo.addRow(new Object[]{c.getIdCliente(), c.getNome(), c.getTelefone(), c.getEmail()});
        }

        tblCliente.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Ver = new javax.swing.JButton();
        btnCriar1 = new javax.swing.JButton();
        btnAtualizar1 = new javax.swing.JButton();
        btnDeletar1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCliente = new javax.swing.JTable();
        btnVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Ver.setText("Ver");
        Ver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerActionPerformed(evt);
            }
        });

        btnCriar1.setText("Criar");
        btnCriar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCriar1ActionPerformed(evt);
            }
        });

        btnAtualizar1.setText("Atualizar");
        btnAtualizar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizar1ActionPerformed(evt);
            }
        });

        btnDeletar1.setText("Excluir");
        btnDeletar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletar1ActionPerformed(evt);
            }
        });

        tblCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblCliente);

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnDeletar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAtualizar1, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                            .addComponent(Ver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCriar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 781, Short.MAX_VALUE))
                    .addComponent(btnVoltar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(btnVoltar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 605, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCriar1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAtualizar1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeletar1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Ver, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void VerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerActionPerformed
        ClienteDAO dao = new ClienteDAO();
        ArrayList<ClienteDTO> lista = dao.listarTodos();

        if (lista.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nenhum cliente encontrado!");
            return;
        }

        StringBuilder sb = new StringBuilder();
        for (ClienteDTO c : lista) {
            sb.append("ID: ").append(c.getIdCliente()).append("\n");
            sb.append("Nome: ").append(c.getNome()).append("\n");
            sb.append("Telefone: ").append(c.getTelefone()).append("\n");
            sb.append("Email: ").append(c.getEmail()).append("\n");
        }

        JOptionPane.showMessageDialog(this, sb.toString(), "Clientes Cadastrados", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_VerActionPerformed

    private void btnCriar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCriar1ActionPerformed
        String nome = JOptionPane.showInputDialog("Nome do cliente:");
        if (nome == null || nome.trim().isEmpty()) {
            return;
        }

        String telefone = JOptionPane.showInputDialog("Telefone do cliente:");
        if (telefone == null || telefone.trim().isEmpty()) {
            return;
        }

        String email = JOptionPane.showInputDialog("Email do cliente:");
        if (email == null || email.trim().isEmpty()) {
            return;
        }

        ClienteDTO c = new ClienteDTO(nome, telefone, email);
        dao.cadastrar(c);

        atualizarTabela();
    }//GEN-LAST:event_btnCriar1ActionPerformed

    private void btnAtualizar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizar1ActionPerformed
        int linha = tblCliente.getSelectedRow();
        if (linha == -1) {
            JOptionPane.showMessageDialog(this, "Selecione um cliente para atualizar!");
            return;
        }

        int idCliente = Integer.parseInt(tblCliente.getValueAt(linha, 0).toString());
        String nomeAtual = tblCliente.getValueAt(linha, 1).toString();
        String telefoneAtual = tblCliente.getValueAt(linha, 2).toString();
        String emailAtual = tblCliente.getValueAt(linha, 3).toString();

        String novoNome = JOptionPane.showInputDialog("Novo nome:", nomeAtual);
        if (novoNome == null || novoNome.trim().isEmpty()) {
            return;
        }

        String novoTelefone = JOptionPane.showInputDialog("Novo telefone:", telefoneAtual);
        if (novoTelefone == null || novoTelefone.trim().isEmpty()) {
            return;
        }

        String novoEmail = JOptionPane.showInputDialog("Novo email:", emailAtual);
        if (novoEmail == null || novoEmail.trim().isEmpty()) {
            return;
        }

        ClienteDTO c = new ClienteDTO(novoNome, novoTelefone, novoEmail);
        c.setIdCliente(idCliente);
        dao.atualizar(c);

        atualizarTabela();
    }//GEN-LAST:event_btnAtualizar1ActionPerformed

    private void btnDeletar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletar1ActionPerformed
        int linha = tblCliente.getSelectedRow();
        if (linha == -1) {
            JOptionPane.showMessageDialog(this, "Selecione um cliente para deletar!");
            return;
        }

        // Pega o ID do cliente da primeira coluna
        int idCliente = Integer.parseInt(tblCliente.getValueAt(linha, 0).toString());

        // Deleta no DAO
        dao.deletar(idCliente);

        // Recarrega a tabela
        atualizarTabela();
    }//GEN-LAST:event_btnDeletar1ActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        home h = new home();
        h.setVisible(true);
        
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClienteVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClienteVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClienteVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClienteVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClienteVIEW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Ver;
    private javax.swing.JButton btnAtualizar1;
    private javax.swing.JButton btnCriar1;
    private javax.swing.JButton btnDeletar1;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCliente;
    // End of variables declaration//GEN-END:variables
}
